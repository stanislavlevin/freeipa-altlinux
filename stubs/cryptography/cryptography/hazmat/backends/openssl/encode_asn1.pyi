from cryptography import utils as utils, x509 as x509
from cryptography.hazmat.backends.openssl.decode_asn1 import _CRL_ENTRY_REASON_ENUM_TO_CODE as _CRL_ENTRY_REASON_ENUM_TO_CODE, _DISTPOINT_TYPE_FULLNAME as _DISTPOINT_TYPE_FULLNAME, _DISTPOINT_TYPE_RELATIVENAME as _DISTPOINT_TYPE_RELATIVENAME
from cryptography.x509.name import _ASN1Type as _ASN1Type
from cryptography.x509.oid import CRLEntryExtensionOID as CRLEntryExtensionOID, ExtensionOID as ExtensionOID, OCSPExtensionOID as OCSPExtensionOID
from typing import Any

def _encode_asn1_int(backend: Any, x: Any): ...
def _encode_asn1_int_gc(backend: Any, x: Any): ...
def _encode_asn1_str(backend: Any, data: Any): ...
def _encode_asn1_utf8_str(backend: Any, string: Any): ...
def _encode_asn1_str_gc(backend: Any, data: Any): ...
def _encode_inhibit_any_policy(backend: Any, inhibit_any_policy: Any): ...
def _encode_name(backend: Any, name: Any): ...
def _encode_name_gc(backend: Any, attributes: Any): ...
def _encode_sk_name_entry(backend: Any, attributes: Any): ...
def _encode_name_entry(backend: Any, attribute: Any): ...
def _encode_crl_number_delta_crl_indicator(backend: Any, ext: Any): ...
def _encode_issuing_dist_point(backend: Any, ext: Any): ...
def _encode_crl_reason(backend: Any, crl_reason: Any): ...
def _encode_invalidity_date(backend: Any, invalidity_date: Any): ...
def _encode_certificate_policies(backend: Any, certificate_policies: Any): ...
def _encode_notice_reference(backend: Any, notice: Any): ...
def _txt2obj(backend: Any, name: Any): ...
def _txt2obj_gc(backend: Any, name: Any): ...
def _encode_ocsp_nocheck(backend: Any, ext: Any): ...
def _encode_key_usage(backend: Any, key_usage: Any): ...
def _encode_authority_key_identifier(backend: Any, authority_keyid: Any): ...
def _encode_basic_constraints(backend: Any, basic_constraints: Any): ...
def _encode_information_access(backend: Any, info_access: Any): ...
def _encode_general_names(backend: Any, names: Any): ...
def _encode_alt_name(backend: Any, san: Any): ...
def _encode_subject_key_identifier(backend: Any, ski: Any): ...
def _encode_general_name(backend: Any, name: Any): ...
def _encode_general_name_preallocated(backend: Any, name: Any, gn: Any) -> None: ...
def _encode_extended_key_usage(backend: Any, extended_key_usage: Any): ...

_CRLREASONFLAGS: Any

def _encode_reasonflags(backend: Any, reasons: Any): ...
def _encode_full_name(backend: Any, full_name: Any): ...
def _encode_relative_name(backend: Any, relative_name: Any): ...
def _encode_cdps_freshest_crl(backend: Any, cdps: Any): ...
def _encode_name_constraints(backend: Any, name_constraints: Any): ...
def _encode_policy_constraints(backend: Any, policy_constraints: Any): ...
def _encode_general_subtree(backend: Any, subtrees: Any): ...
def _encode_precert_signed_certificate_timestamps(backend: Any, scts: Any): ...
def _encode_nonce(backend: Any, nonce: Any): ...

_EXTENSION_ENCODE_HANDLERS: Any
_CRL_EXTENSION_ENCODE_HANDLERS: Any
_CRL_ENTRY_EXTENSION_ENCODE_HANDLERS: Any
_OCSP_REQUEST_EXTENSION_ENCODE_HANDLERS: Any
_OCSP_BASICRESP_EXTENSION_ENCODE_HANDLERS: Any
