from cryptography.hazmat.backends.openssl.utils import _evp_pkey_derive as _evp_pkey_derive
from cryptography.hazmat.primitives import serialization as serialization
from cryptography.hazmat.primitives.asymmetric.x448 import X448PrivateKey as X448PrivateKey, X448PublicKey as X448PublicKey
from typing import Any

_X448_KEY_SIZE: int

class _X448PublicKey(X448PublicKey):
    _backend: Any = ...
    _evp_pkey: Any = ...
    def __init__(self, backend: Any, evp_pkey: Any) -> None: ...
    def public_bytes(self, encoding: serialization.Encoding, format: serialization.PublicFormat) -> bytes: ...
    def _raw_public_bytes(self) -> bytes: ...

class _X448PrivateKey(X448PrivateKey):
    _backend: Any = ...
    _evp_pkey: Any = ...
    def __init__(self, backend: Any, evp_pkey: Any) -> None: ...
    def public_key(self) -> X448PublicKey: ...
    def exchange(self, peer_public_key: X448PublicKey) -> bytes: ...
    def private_bytes(self, encoding: serialization.Encoding, format: serialization.PrivateFormat, encryption_algorithm: serialization.KeySerializationEncryption) -> bytes: ...
    def _raw_private_bytes(self) -> bytes: ...
