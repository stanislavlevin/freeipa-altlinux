from cryptography import utils as utils
from cryptography.exceptions import InvalidTag as InvalidTag, UnsupportedAlgorithm as UnsupportedAlgorithm, _Reasons as _Reasons
from cryptography.hazmat.primitives import ciphers as ciphers
from cryptography.hazmat.primitives.ciphers import modes as modes
from typing import Any

class _CipherContext:
    _ENCRYPT: int = ...
    _DECRYPT: int = ...
    _MAX_CHUNK_SIZE: Any = ...
    _backend: Any = ...
    _cipher: Any = ...
    _mode: Any = ...
    _operation: Any = ...
    _tag: Any = ...
    _block_size_bytes: Any = ...
    _ctx: Any = ...
    def __init__(self, backend: Any, cipher: Any, mode: Any, operation: Any) -> None: ...
    def update(self, data: bytes) -> bytes: ...
    def update_into(self, data: bytes, buf: Any) -> int: ...
    def finalize(self) -> bytes: ...
    def finalize_with_tag(self, tag: bytes) -> bytes: ...
    def authenticate_additional_data(self, data: bytes) -> None: ...
    tag: Any = ...
