from cryptography import utils as utils
from cryptography.exceptions import InvalidSignature as InvalidSignature, UnsupportedAlgorithm as UnsupportedAlgorithm, _Reasons as _Reasons
from cryptography.hazmat.primitives import constant_time as constant_time
from cryptography.hazmat.primitives.ciphers.modes import CBC as CBC
from typing import Any, Optional

class _CMACContext:
    _backend: Any = ...
    _key: Any = ...
    _algorithm: Any = ...
    _output_length: Any = ...
    _ctx: Any = ...
    def __init__(self, backend: Any, algorithm: Any, ctx: Optional[Any] = ...) -> None: ...
    algorithm: Any = ...
    def update(self, data: bytes) -> None: ...
    def finalize(self) -> bytes: ...
    def copy(self) -> _CMACContext: ...
    def verify(self, signature: bytes) -> None: ...
