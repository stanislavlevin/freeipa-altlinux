from cryptography import utils as utils
from cryptography.exceptions import AlreadyFinalized as AlreadyFinalized, UnsupportedAlgorithm as UnsupportedAlgorithm, _Reasons as _Reasons
from cryptography.hazmat.backends import _get_backend as _get_backend
from cryptography.hazmat.backends.interfaces import CMACBackend as CMACBackend
from cryptography.hazmat.primitives import ciphers as ciphers
from typing import Any

class CMAC:
    _algorithm: Any = ...
    _backend: Any = ...
    _ctx: Any = ...
    def __init__(self, algorithm: ciphers.BlockCipherAlgorithm, backend: Any=..., ctx: Any=...) -> None: ...
    def update(self, data: bytes) -> None: ...
    def finalize(self) -> bytes: ...
    def verify(self, signature: bytes) -> None: ...
    def copy(self) -> CMAC: ...
