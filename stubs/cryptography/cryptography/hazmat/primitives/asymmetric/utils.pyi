import typing
from cryptography import utils as utils
from cryptography.hazmat._der import DERReader as DERReader, INTEGER as INTEGER, SEQUENCE as SEQUENCE, encode_der as encode_der, encode_der_integer as encode_der_integer
from cryptography.hazmat.primitives import hashes as hashes
from typing import Any

def decode_dss_signature(signature: bytes) -> typing.Tuple[int, int]: ...
def encode_dss_signature(r: int, s: int) -> bytes: ...

class Prehashed:
    _algorithm: Any = ...
    _digest_size: Any = ...
    def __init__(self, algorithm: hashes.HashAlgorithm) -> None: ...
    digest_size: Any = ...
