from cryptography import utils as utils
from cryptography.exceptions import AlreadyFinalized as AlreadyFinalized, InvalidKey as InvalidKey, UnsupportedAlgorithm as UnsupportedAlgorithm, _Reasons as _Reasons
from cryptography.hazmat.backends import _get_backend as _get_backend
from cryptography.hazmat.backends.interfaces import ScryptBackend as ScryptBackend
from cryptography.hazmat.primitives import constant_time as constant_time
from cryptography.hazmat.primitives.kdf import KeyDerivationFunction as KeyDerivationFunction
from typing import Any

_MEM_LIMIT: Any

class Scrypt(KeyDerivationFunction):
    _length: Any = ...
    _used: bool = ...
    _salt: Any = ...
    _n: Any = ...
    _r: Any = ...
    _p: Any = ...
    _backend: Any = ...
    def __init__(self, salt: bytes, length: int, n: int, r: int, p: int, backend: Any=...) -> None: ...
    def derive(self, key_material: bytes) -> bytes: ...
    def verify(self, key_material: bytes, expected_key: bytes) -> None: ...
